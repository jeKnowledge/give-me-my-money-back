[{"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\index.js":"1","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\App.js":"2","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\GlobalComponent.js":"3","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\Sidebar.js":"4","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\Signup.js":"5","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\HomePage.js":"6","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\DividasShowaDever.js":"7","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\DividasShowTEC.js":"8","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\Login.js":"9","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\DividasShowINT.js":"10","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\DividasShowINO.js":"11","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\DividasTotais.js":"12","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\DividasShowDevo.js":"13","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\CriarDivida.js":"14","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\Sidebarcomp.js":"15","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\Selects.js":"16","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\DividasTotaisComp.js":"17","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\Buttons.js":"18","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\LabelsInputs.js":"19","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\TopBar.js":"20","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\DividasShowComponent.js":"21","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\Popup.js":"22","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\checkAdmin.js":"23"},{"size":457,"mtime":1614786814966,"results":"24","hashOfConfig":"25"},{"size":2517,"mtime":1614643086242,"results":"26","hashOfConfig":"25"},{"size":1868,"mtime":1614786814962,"results":"27","hashOfConfig":"25"},{"size":166,"mtime":1614643086252,"results":"28","hashOfConfig":"25"},{"size":5516,"mtime":1614727798321,"results":"29","hashOfConfig":"25"},{"size":1005,"mtime":1614643086250,"results":"30","hashOfConfig":"25"},{"size":1170,"mtime":1614786814951,"results":"31","hashOfConfig":"25"},{"size":1163,"mtime":1614786814948,"results":"32","hashOfConfig":"25"},{"size":3668,"mtime":1614799937215,"results":"33","hashOfConfig":"25"},{"size":975,"mtime":1614786814946,"results":"34","hashOfConfig":"25"},{"size":1076,"mtime":1614786814944,"results":"35","hashOfConfig":"25"},{"size":724,"mtime":1614786814955,"results":"36","hashOfConfig":"25"},{"size":1044,"mtime":1614786814942,"results":"37","hashOfConfig":"25"},{"size":6739,"mtime":1614799937268,"results":"38","hashOfConfig":"25"},{"size":5372,"mtime":1614799937218,"results":"39","hashOfConfig":"25"},{"size":569,"mtime":1614170127006,"results":"40","hashOfConfig":"25"},{"size":3667,"mtime":1614799937216,"results":"41","hashOfConfig":"25"},{"size":341,"mtime":1614127652340,"results":"42","hashOfConfig":"25"},{"size":1400,"mtime":1614268352013,"results":"43","hashOfConfig":"25"},{"size":1256,"mtime":1614193869320,"results":"44","hashOfConfig":"25"},{"size":8317,"mtime":1614799937258,"results":"45","hashOfConfig":"25"},{"size":887,"mtime":1614789606464,"results":"46","hashOfConfig":"25"},{"size":1702,"mtime":1614786814964,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1n3w92c",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"51"},"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\index.js",["105"],"import axios from \"axios\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { AdminContextProvider } from \"./components/checkAdmin\";\r\nimport { AuthContextProvider } from \"./components/GlobalComponent\";\r\n//component global aqui\r\nReactDOM.render(\r\n  <AdminContextProvider>\r\n    <AuthContextProvider>\r\n      <App />\r\n    </AuthContextProvider>\r\n  </AdminContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n",["106","107"],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\App.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\GlobalComponent.js",["108"],"import React, { useReducer, useEffect, createContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport {\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n//* um context e um componente que tem componentes filhos\r\n//* pode nao ser um context pode ser apenas um componente global\r\n\r\n//TODO tirar a porta do front end\r\n//TODO e defenir a porta como o base url aqui\r\nlet AuthContext = createContext();\r\naxios.defaults.baseURL = \"http://localhost:8000/\";\r\n\r\n//O context só dá render da App quando tiver guardado o token no State\r\nconst AuthReducer = (state = {}, action) => {\r\n  const token = localStorage.getItem(\"Authorization\");\r\n  if(token===null) {return (<Redirect to=\"/\" />)}\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        status: \"LOGIN\",\r\n        userToken: token,\r\n      };\r\n    case \"CHECKAUTHSTATE\":\r\n      if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n      }\r\n      return {\r\n        ...state,\r\n        status: \"CHECKINGAUTHSTATE\",\r\n        userToken: token,\r\n      };\r\n\r\n    case \"LOGOUT\":\r\n      localStorage.clear();\r\n      return {\r\n        ...state,\r\n        status: \"LOGOUT\",\r\n        userToken: null,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n        status: \"default\",\r\n        userToken: token,\r\n      };\r\n  }\r\n};\r\nconst Initialstate = {\r\n  //* Initialstate:\r\n  status: \"InitalState\",\r\n  userToken: null,\r\n};\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const [state, dispatch] = useReducer(AuthReducer, Initialstate);\r\n  let value = { state, dispatch };\r\n  useEffect(() => {\r\n    dispatch({ type: \"CHECKAUTHSTATE\" });\r\n  }, [state.token]);\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!state.loading && props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContextProvider, AuthContext };\r\n","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\Sidebar.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\Signup.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\HomePage.js",["109"],"//* usual stuff\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from './components/GlobalComponent';\r\n\r\n//* styling the page\r\nimport logo from './style/logo/logoJek.svg';\r\nimport './style/css/HomePage.css';\r\nimport Buttons from './components/Buttons'\r\n\r\nconst HomePage = () => {\r\n  localStorage.clear();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <div id=\"Background\">  \r\n          <img src={logo} className=\"App-logo-mainmenu\" alt=\"logo\" />\r\n          <div id=\"btns\">\r\n              <Link to=\"users/login\">\r\n                <Buttons \r\n                  name=\"Log in\"\r\n                  title=\"LoginStr buttonsHomePage\"\r\n                />\r\n              </Link>\r\n              <Link to=\"users/signup\">\r\n                <Buttons \r\n                    name=\"Registar\"\r\n                    title=\"RegistarStr buttonsHomePage\"\r\n                  />\r\n              </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\DividasShowaDever.js",["110","111"],"import React from \"react\";\r\nimport DividasComponent from \"./components/DividasShowComponent\";\r\nimport TopBar from \"./components/TopBar\";\r\nimport SideBar from \"./components/Sidebarcomp\";\r\nimport { AuthContext } from \"./components/GlobalComponent\";\r\nimport { AdminContext } from \"./components/checkAdmin\";\r\n\r\nconst DividasShowaDever = () => {\r\n  const authcontext = React.useContext(AuthContext);\r\n  const admincontext = React.useContext(AdminContext);\r\n\r\n  const handleifAdmin = () => {\r\n    admincontext.dispatch({ type: \"CHECKADMINSTATE\" });\r\n  };\r\n  return (\r\n    <div>\r\n      <div id=\"bg\">\r\n        <div className=\"topbar-mobile\">\r\n          <TopBar\r\n            color=\"normalTopBarCOLOR\"\r\n            height=\"11vh\" //parece ser 18 na sidebar (13% é o normal)\r\n            linkto=\"/home\"\r\n            logo=\"normal\"\r\n          />\r\n        </div>\r\n      <div className=\"criar-divida-tituloDEV\">\r\n        <h1>O que me devem</h1>\r\n      </div>\r\n\r\n        <DividasComponent user=\"toouser\" color=\"#F08A6E\" button=\"true\" />\r\n      </div>\r\n      <div className=\"sidebar-mobile\">\r\n        <SideBar />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DividasShowaDever;\r\n","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\DividasShowTEC.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\Login.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\DividasShowINT.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\DividasShowINO.js",["112","113"],"import React from \"react\";\r\nimport DividasComponent from \"./components/DividasShowComponent\";\r\nimport TopBar from \"./components/TopBar\";\r\nimport { AuthContext } from \"./components/GlobalComponent\";\r\nimport { AdminContext } from \"./components/checkAdmin\";\r\nimport SideBar from \"./components/Sidebarcomp\";\r\n\r\nconst DividasShow = () => {\r\n  const authcontext = React.useContext(AuthContext);\r\n  const admincontext = React.useContext(AdminContext);\r\n\r\n  const handleifAdmin = () => {\r\n    admincontext.dispatch({ type: \"CHECKADMINSTATE\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"bg\">\r\n      <TopBar\r\n        color=\"normalTopBarCOLOR\"\r\n        height=\"11vh\" //parece ser 18 na sidebar (13% é o normal)\r\n        linkto=\"/home\"\r\n        logo=\"normal\"\r\n      />\r\n\r\n      <div className=\"criar-divida-tituloDSC\">\r\n        <h1>Dívidas Inovação</h1>\r\n      </div>\r\n\r\n      <DividasComponent color=\"#FCC17A\" page=\"Ino\" />\r\n    </div>\r\n      <div className=\"sidebar-mobile\">\r\n        <SideBar />\r\n      </div>\r\n    </div>\r\n    \r\n    \r\n  );\r\n};\r\n\r\nexport default DividasShow;\r\n","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\DividasTotais.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\DividasShowDevo.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\CriarDivida.js",["114"],"import React, { useReducer } from \"react\";\r\nimport { AuthContext } from \"./components/GlobalComponent\";\r\nimport axios from \"axios\";\r\nimport \"./style/css/CriarDivida.css\";\r\nimport LabelsInputs from \"./components/LabelsInputs\";\r\nimport Buttons from \"./components/Buttons\";\r\nimport TopBar from \"./components/TopBar\";\r\nimport Popup from \"./components/Popup\";\r\nimport SideBar from \"./components/Sidebarcomp\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { AdminContext } from \"./components/checkAdmin\";\r\n\r\nconst initialState = {\r\n  credor: \"\",\r\n  devedor: \"\",\r\n  quantia: \"\",\r\n  descricao: \"\",\r\n  pop: 0,\r\n  errors: false,\r\n};\r\n\r\nconst dividaReducer = (divida, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      const { name, value } = action;\r\n      return { ...divida, [name]: value };\r\n    case \"RESET\":\r\n      return { ...divida, ...initialState };\r\n    case \"pop1\":\r\n      return {\r\n        ...divida,\r\n        pop: action.pop,\r\n      };\r\n    case \"errors\":\r\n      return {\r\n        ...divida,\r\n        errors: action.errors,\r\n      };\r\n    default:\r\n      return divida;\r\n  }\r\n};\r\n\r\n// Stateless Functional Component\r\nconst CriarDivida = () => {\r\n  const authcontext = React.useContext(AuthContext);\r\n  const admincontext = React.useContext(AdminContext);\r\n\r\n  const [divida, dispatch] = useReducer(dividaReducer, initialState);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    dispatch({ type: \"CHANGE\", name, value });\r\n  };\r\n\r\n  const analiseDivida = (divid) => {\r\n    const tok = authcontext.state.userToken.split(\" \");\r\n    const decoded = jwt.decode(tok[1], \"secret\");\r\n    const email = decoded.email;\r\n    let check = false;\r\n\r\n    if (divid.credor === email) {\r\n      check = true;\r\n    } else {\r\n      const devedores = divid.devedor.split(\",\");\r\n      console.log(devedores);\r\n      for (let i = 0; i < devedores.length; i++) {\r\n        if (devedores[i] === email) {\r\n          check = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (divid.descricao.length >= 10) {\r\n      check = false;\r\n    }\r\n\r\n    return check;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    // impede que a pagina seja reloadada apos o clique no botao\r\n    e.preventDefault();\r\n    divida.quantia = parseFloat(divida.quantia);\r\n    console.log(divida);\r\n    authcontext.dispatch({ type: \"CHECKAUTHSTATE\" });\r\n    admincontext.dispatch({ type: \"CHECKADMINSTATE\" });\r\n    if (authcontext.state.isadmin) {\r\n      console.log(divida);\r\n      axios\r\n        .post(\"/dividas/\", { divida })\r\n        .then(() => {\r\n          dispatch({ type: \"pop1\", pop: 1 });\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n          }, 2000);\r\n        })\r\n        .catch((err) => {\r\n          dispatch({ type: \"errors\", errors: true });\r\n        });\r\n    } else if (analiseDivida(divida)) {\r\n      axios\r\n        .post(\"/dividas/\", { divida })\r\n        .then(() => {\r\n          dispatch({ type: \"pop1\", pop: 1 });\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n          }, 20000000);\r\n        })\r\n        .catch((err) => {\r\n          dispatch({ type: \"errors\", errors: true });\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      dispatch({ type: \"errors\", errors: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"topbar-mobile\">\r\n        <TopBar\r\n          color=\"normalTopBarCOLOR\"\r\n          height=\"11vh\" //parece ser 18 na sidebar (13% é o normal)\r\n          linkto=\"/home\"\r\n          logo=\"normal\"\r\n        />\r\n      </div>\r\n      <div className=\"sidebar-mobile\">\r\n        <SideBar />\r\n      </div>\r\n      <form className=\"criar-divida\" onSubmit={handleSubmit}>\r\n        <div className=\"campos\" id=\"myCampos\">\r\n          <div className=\"criar-divida-titulo\">\r\n            <h1>Cria uma nova dívida</h1>\r\n          </div>\r\n          <div className=\"inputs-criar-divida\">\r\n            <div className=\"credor-devedor-quantia-css\">\r\n              <div className=\"credor-css\">\r\n                <LabelsInputs\r\n                  title=\"Credor\"\r\n                  name=\"credor\"\r\n                  type=\"text\"\r\n                  placeholder=\"exemplo@jeknowledge.pt\"\r\n                  onChange={handleInputChange}\r\n                  value={divida.credor}\r\n                />\r\n              </div>\r\n              <div className=\"devedor-css\">\r\n                <LabelsInputs\r\n                  title=\"Devedor\"\r\n                  name=\"devedor\"\r\n                  type=\"text\"\r\n                  placeholder=\"exemplo@jeknowledge.pt\"\r\n                  onChange={handleInputChange}\r\n                  value={divida.devedor}\r\n                />\r\n                <span className=\"devedoresWatermark\">\r\n                  No caso de serem vários devedores, efetua a divisão por\r\n                  virgulas.\r\n                </span>\r\n              </div>\r\n              <div className=\"quantia-css\">\r\n                <LabelsInputs\r\n                  title=\"Quantia\"\r\n                  name=\"quantia\"\r\n                  type=\"number\"\r\n                  placeholder=\"Quantia da dívida\"\r\n                  onChange={handleInputChange}\r\n                  value={divida.quantia}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"descricao-css\">\r\n              <label className=\"descricao-label\">Descrição</label>\r\n              <textarea\r\n                className=\"input-descricao\"\r\n                name=\"descricao\"\r\n                type=\"text\"\r\n                placeholder=\"Descrição da dívida\"\r\n                onChange={handleInputChange}\r\n                value={divida.descricao}\r\n              ></textarea>\r\n              <span className=\"devedoresWatermark\">\r\n                No máximo 10 caracteres!\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"button-criar-divida\">\r\n            <Buttons name=\"Criar Dívida\" type=\"submit\" title=\"button\" />\r\n            {divida.errors && (\r\n              <div className=\"Errors\">\r\n                <p className=\"error-create-div\">\r\n                  Erro ao criar a tua divida! Tenta novamente.\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {divida.pop == 1 && (\r\n          <div className=\"popup-criar-divida\">\r\n            <Popup\r\n              title=\"Dívida criada com sucesso!\"\r\n              name1=\"popupzito\"\r\n              name2=\"popuptext\"\r\n              id1=\"myPopup\"\r\n              id2=\"myPopupText\"\r\n            />\r\n            <div className=\"circle-div\">\r\n              <span className=\"circle\"></span>\r\n              <span className=\"check\"></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CriarDivida;\r\n","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\Sidebarcomp.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\Selects.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\DividasTotaisComp.js",["115","116"],"import React, { useState, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../style/css/DividasTotais.css\";\r\nimport { AuthContext } from \"./GlobalComponent\";\r\n\r\nconst inicialstate = {\r\n  dividasIno: 0,\r\n  dividasInt: 0,\r\n  dividasTech: 0,\r\n  dividasPIno: 0,\r\n  dividasPInt: 0,\r\n  dividasPTech: 0,\r\n  loading: true,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"dividas\":\r\n      return {\r\n        ...state,\r\n        dividasIno: action.ino,\r\n        dividasInt: action.int,\r\n        dividasTech: action.tech,\r\n        dividasPIno: action.ino_pay,\r\n        dividasPInt: action.int_pay,\r\n        dividasPTech: action.tech_pay,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst DividasTotaisComp = (props) => {\r\n  const authcontext = React.useContext(AuthContext);\r\n\r\n  let url = \"http://localhost:8000/dividas/alldep\";\r\n\r\n  const [state, dispatch] = useReducer(reducer, inicialstate);\r\n\r\n  //Dividas são carregadas inicialmente\r\n  useEffect(() => {\r\n    authcontext.dispatch({ type: \"CHECKAUTHSTATE\" });\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        let ino = res.data.ino;\r\n        let int = res.data.int;\r\n        let tech = res.data.tech;\r\n        let ino_pay = res.data.ino_pay;\r\n        let int_pay = res.data.int_pay;\r\n        let tech_pay = res.data.tech_pay;\r\n        dispatch({\r\n          type: \"dividas\",\r\n          ino,\r\n          int,\r\n          tech,\r\n          ino_pay,\r\n          int_pay,\r\n          tech_pay,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dividasshow\">\r\n      <div className=\"partecima\">\r\n      <div className=\"caixa box1\">\r\n        <div className=\"Ino\">\r\n          <p className=\"titulo\">Departamento Inovação</p>\r\n          <span id=\"line\"></span>\r\n        </div>\r\n        <div className=\"textIno\">\r\n          <p>\r\n            <span>\r\n              <strong className=\"color1\">Dividas Totais:</strong>{\" \"}\r\n            </span>\r\n            {state.dividasIno} €\r\n          </p>\r\n          <p>\r\n            <span>\r\n              <strong className=\"color1\">Total Pago:</strong>{\" \"}\r\n            </span>\r\n            {state.dividasPIno} €\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"caixa box2\">\r\n        <div className=\"Int\">\r\n          <p className=\"titulo\">Departamento Interno</p>\r\n          <span id=\"line\"></span>\r\n        </div>\r\n        <div className=\"textInt\">\r\n          <p>\r\n            <span>\r\n              <strong className=\"color2\">Dividas Totais:</strong>{\" \"}\r\n            </span>\r\n            {state.dividasInt} €\r\n          </p>\r\n          <p>\r\n            <span>\r\n              <strong className=\"color2\">Total Pago:</strong>{\" \"}\r\n            </span>\r\n            {state.dividasPInt} €\r\n          </p>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <div className=\"caixa box3\">\r\n        <div className=\"Tech\">\r\n          <p className=\"titulo\">Departamento Tecnologia</p>\r\n          <span id=\"line\"></span>\r\n        </div>\r\n        <div className=\"textTech\">\r\n          <p>\r\n            <span>\r\n              <strong className=\"color3\">Dividas Totais:</strong>{\" \"}\r\n            </span>\r\n            {state.dividasTech} €\r\n          </p>\r\n          <p>\r\n            <span>\r\n              <strong className=\"color3\">Total Pago:</strong>{\" \"}\r\n            </span>\r\n            {state.dividasPTech} €\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DividasTotaisComp;\r\n",["117","118"],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\Buttons.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\LabelsInputs.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\TopBar.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\DividasShowComponent.js",["119","120","121","122","123","124","125","126","127","128"],"import \"../style/css/DividasShowComponent.css\";\r\nimport React, { useState, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport Slider from \"infinite-react-carousel\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"./GlobalComponent\";\r\nimport Popup from \"./Popup\";\r\nimport \"../style/css/PopUp.css\";\r\nimport { AdminContext } from \"../components/checkAdmin.js\";\r\n\r\nconst inicialstate = {\r\n  dividasPagas: [],\r\n  dividasNPagas: [],\r\n  loading: true,\r\n  pop: 0,\r\n};\r\n\r\nfunction PagoColorselect(color) {\r\n  switch (color) {\r\n    case \"#F05B78\":\r\n      return \"#F391A4\";\r\n    case \"#FCC17A\":\r\n      return \"#FFD8AB\";\r\n    case \"#51A450\":\r\n      return \"#9FCA9E\";\r\n    case \"#F08A6E\":\r\n      return \"rgba(240, 138, 110, 0.68)\";\r\n  }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"dividas\":\r\n      return {\r\n        ...state,\r\n        dividasPagas: action.auxPagas,\r\n        dividasNPagas: action.auxNPagas,\r\n        loading: false,\r\n      };\r\n    case \"pop1\":\r\n      return {\r\n        ...state,\r\n        pop: action.pop,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst DividasComponent = (props) => {\r\n  const authcontext = React.useContext(AuthContext);\r\n  const admincontext = React.useContext(AdminContext);\r\n\r\n  const color = props.color;\r\n  const button = props.button;\r\n  const user = props.user;\r\n\r\n  let Pagocolor = PagoColorselect(color);\r\n\r\n  let url = \"dividas/\" + props.page;\r\n\r\n  const [state, dispatch] = useReducer(reducer, inicialstate);\r\n  const [count, setCount] = useState(0);\r\n\r\n  if (user === \"usertoo\") {\r\n    url = \"dividas/usertoo\";\r\n  } else if (user === \"toouser\") {\r\n    url = \"dividas/toouser\";\r\n  }\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 300,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    arrows: false,\r\n    dots: false,\r\n  };\r\n\r\n  const DividasPagaNaoPaga = (dividas) => {\r\n    console.log(dividas);\r\n    const nrdividas = dividas.length;\r\n    const auxNPagas = [];\r\n    const auxPagas = [];\r\n\r\n    console.log(dividas);\r\n    for (let i = 0; i < nrdividas; i++) {\r\n      // ? console.log(i);\r\n      if (dividas[i].paga === false) {\r\n        //console.log(\"paga\")\r\n        auxNPagas.push(dividas[i]);\r\n      } else {\r\n        auxPagas.push(dividas[i]);\r\n      }\r\n    }\r\n    dispatch({ type: \"dividas\", auxNPagas, auxPagas });\r\n  };\r\n\r\n  const handlePay = () => {\r\n    dispatch({ type: \"pop1\", pop: 1 });\r\n  };\r\n\r\n  const handleResp = (resp) => {\r\n    console.log(count);\r\n    if (resp === \"sim\") {\r\n      if (state.dividasNPagas.length > 0) {\r\n        const url_div = \"dividas/\" + state.dividasNPagas[count]._id;\r\n\r\n        axios.post(url_div).then((res) => {\r\n          dispatch({ type: \"pop1\", pop: 2 });\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n          }, 2000);\r\n        });\r\n      } else {\r\n        console.log(\"Nao ha dividas\");\r\n      }\r\n    } else {\r\n      dispatch({ type: \"pop1\", pop: 0 });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    authcontext.dispatch({ type: \"CHECKAUTHSTATE\" });\r\n    admincontext.dispatch({ type: \"CHECKADMINSTATE\" });\r\n    console.log(url);\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        const lastget = res.data;\r\n        console.log(res.data);\r\n        DividasPagaNaoPaga(lastget);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const slider = (dividas, isPay = false) => {\r\n    return (\r\n      <Slider {...settings} afterChange={(i) => isPay && setCount(i)}>\r\n        {dividas.map((dividadiv, i) => {\r\n          return (\r\n            <div id=\"descricaodiv\" key={i}>\r\n              {props.user != \"toouser\" && (\r\n                <p>\r\n                  <span id=\"text2\" style={{ color: color }}>\r\n                    <strong>Credor:</strong>{\" \"}\r\n                  </span>\r\n                  {dividadiv.credorS}\r\n                </p>\r\n              )}\r\n              {props.user != \"usertoo\" && (\r\n                <p>\r\n                  <span id=\"text2\" style={{ color: color }}>\r\n                    <strong>Devedor:</strong>{\" \"}\r\n                  </span>\r\n                  {dividadiv.devedorS}\r\n                </p>\r\n              )}\r\n              <p>\r\n                <span id=\"text2\" style={{ color: color }}>\r\n                  <strong>Valor a pagar:</strong>{\" \"}\r\n                </span>\r\n                {dividadiv.quantia + \"€\"}\r\n              </p>\r\n              <div className=\"div-button\">\r\n                {button && isPay && (\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"pay-button\"\r\n                    onClick={handlePay}\r\n                  >\r\n                    Pagar\r\n                  </button>\r\n                )}\r\n                {admincontext.state.isadmin &&\r\n                  isPay &&\r\n                  props.user == \"usertoo\" && (\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"pay-button\"\r\n                      onClick={handlePay}\r\n                    >\r\n                      Pagar\r\n                    </button>\r\n                  )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </Slider>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dividasshow\" id=\"dividasshowid\">\r\n      <div class=\"slider\">\r\n        <div id=\"dividasshowid\">\r\n          <div className=\"square\">\r\n            <div className=\"Ppagar\" style={{ background: color }}>\r\n              <span id=\"text1\">Por Pagar</span>\r\n            </div>\r\n\r\n            <div id=\"dividaspresent\">\r\n              <p id=\"titlepresent\" style={{ color: color }}>\r\n                Descrição da divida\r\n              </p>\r\n\r\n              <span id=\"line\" style={{ borderColor: color }}></span>\r\n              {!state.loading &&\r\n                state.dividasNPagas.length &&\r\n                slider(state.dividasNPagas, true)}\r\n              {!state.dividasNPagas.length && (\r\n                <p className=\"not-dividas-create\">\r\n                  Ainda não há dividas por pagar ...\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"square\">\r\n            <div className=\"Ppagar\" style={{ background: Pagocolor }}>\r\n              <span id=\"text1\">Pago</span>\r\n            </div>\r\n\r\n            <div id=\"dividaspresent\">\r\n              <p id=\"titlepresent\" style={{ color: color }}>\r\n                Descrição da divida\r\n              </p>\r\n\r\n              <span id=\"line\" style={{ borderColor: color }}></span>\r\n              {!state.loading &&\r\n                state.dividasPagas.length &&\r\n                slider(state.dividasPagas)}\r\n              {!state.dividasPagas.length && (\r\n                <p className=\"not-dividas-create\">\r\n                  Ainda não há dividas pagas ...\r\n                </p>\r\n              )}\r\n              {}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {state.pop == 1 && (\r\n        <div className=\"popup-confirmar\">\r\n          <Popup\r\n            title=\"Queres confirmar o pagamento desta divida?\"\r\n            name1=\"popupzito1\"\r\n            name2=\"buttontext\"\r\n            id1=\"myPopup\"\r\n            id2=\"myPopupText\"\r\n            id3=\"buttonsPopUp\"\r\n            button=\"true\"\r\n            func={handleResp}\r\n          />\r\n        </div>\r\n      )}\r\n      {state.pop == 2 && (\r\n        <div className=\"popup-divida-paga\">\r\n          <Popup\r\n            title=\"Divida paga com sucesso!\"\r\n            name1=\"popupzito1\"\r\n            name2=\"popuptext\"\r\n            id1=\"myPopup\"\r\n            id2=\"myPopupText\"\r\n          />\r\n          <span className=\"circle\"></span>\r\n          <span className=\"check\"></span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DividasComponent;\r\n","C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\Popup.js",[],"C:\\Users\\Gui\\Desktop\\jeK\\jeKash\\client\\src\\components\\checkAdmin.js",["129","130"],"import React, { useReducer, useEffect, createContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\n//* um context e um componente que tem componentes filhos\r\n//* pode nao ser um context pode ser apenas um componente global\r\n\r\n//TODO tirar a porta do front end\r\n//TODO e defenir a porta como o base url aqui\r\nlet AdminContext = createContext();\r\nconst id_admin = \"60328f4b2ff1fe39404a88ef\";\r\n\r\n//O context só dá render da App quando tiver guardado o token no State\r\nconst AdminReducer = (state = {}, action) => {\r\n  const token = localStorage.getItem(\"Authorization\");\r\n\r\n  switch (action.type) {\r\n    case \"CHECKADMINSTATE\":\r\n      if (token) {\r\n        const tok = token.split(\" \");\r\n        const decoded = jwt.decode(tok[1], \"secret\");\r\n        const id_user = decoded.userId;\r\n        console.log(id_user);\r\n        if (id_user === id_admin) {\r\n          return {\r\n            ...state,\r\n            status: \"CHECKADMINSTATE\",\r\n            isadmin: true,\r\n          };\r\n        }\r\n      }\r\n    default:\r\n      return {\r\n        ...state,\r\n        status: \"default\",\r\n        isadmin: false,\r\n      };\r\n  }\r\n};\r\nconst Initialstate = {\r\n  //* Initialstate:\r\n  status: \"InitalState\",\r\n  isadmin: false,\r\n};\r\n\r\nconst AdminContextProvider = (props) => {\r\n  const [state, dispatch] = useReducer(AdminReducer, Initialstate);\r\n  let value = { state, dispatch };\r\n  console.log(state.isadmin);\r\n  useEffect(() => {\r\n    dispatch({ type: \"CHECKADMINSTATE\" });\r\n  }, [state.isadmin]);\r\n  return (\r\n    <AdminContext.Provider value={value}>\r\n      {!state.loading && props.children}\r\n    </AdminContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AdminContextProvider, AdminContext };\r\n",{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"131","severity":1,"message":"139","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":11},{"ruleId":"131","severity":1,"message":"140","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":21},{"ruleId":"131","severity":1,"message":"141","line":9,"column":9,"nodeType":"133","messageId":"134","endLine":9,"endColumn":20},{"ruleId":"131","severity":1,"message":"142","line":12,"column":9,"nodeType":"133","messageId":"134","endLine":12,"endColumn":22},{"ruleId":"131","severity":1,"message":"141","line":9,"column":9,"nodeType":"133","messageId":"134","endLine":9,"endColumn":20},{"ruleId":"131","severity":1,"message":"142","line":12,"column":9,"nodeType":"133","messageId":"134","endLine":12,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":200,"column":21,"nodeType":"145","messageId":"146","endLine":200,"endColumn":23},{"ruleId":"131","severity":1,"message":"147","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"149","line":67,"column":6,"nodeType":"150","endLine":67,"endColumn":8,"suggestions":"151"},{"ruleId":"135","replacedBy":"152"},{"ruleId":"137","replacedBy":"153"},{"ruleId":"131","severity":1,"message":"154","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":18},{"ruleId":"131","severity":1,"message":"155","line":5,"column":20,"nodeType":"133","messageId":"134","endLine":5,"endColumn":30},{"ruleId":"156","severity":1,"message":"157","line":19,"column":3,"nodeType":"158","messageId":"159","endLine":28,"endColumn":4},{"ruleId":"160","severity":1,"message":"161","line":78,"column":5,"nodeType":"162","messageId":"146","endLine":78,"endColumn":9},{"ruleId":"148","severity":1,"message":"163","line":138,"column":6,"nodeType":"150","endLine":138,"endColumn":8,"suggestions":"164"},{"ruleId":"143","severity":1,"message":"165","line":146,"column":27,"nodeType":"145","messageId":"146","endLine":146,"endColumn":29},{"ruleId":"143","severity":1,"message":"165","line":154,"column":27,"nodeType":"145","messageId":"146","endLine":154,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":180,"column":30,"nodeType":"145","messageId":"146","endLine":180,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":247,"column":18,"nodeType":"145","messageId":"146","endLine":247,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":261,"column":18,"nodeType":"145","messageId":"146","endLine":261,"endColumn":20},{"ruleId":"131","severity":1,"message":"132","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},{"ruleId":"166","severity":1,"message":"167","line":32,"column":5,"nodeType":"168","messageId":"169","endLine":37,"endColumn":9},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["170"],"no-negated-in-lhs",["171"],"'jwt' is defined but never used.","'AuthContext' is defined but never used.","'authcontext' is assigned a value but never used.","'handleifAdmin' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authcontext' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["172"],["170"],["171"],"'Redirect' is defined but never used.","'useHistory' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-dupe-keys","Duplicate key 'dots'.","ObjectExpression","React Hook useEffect has missing dependencies: 'admincontext', 'authcontext', and 'url'. Either include them or remove the dependency array.",["173"],"Expected '!==' and instead saw '!='.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [authcontext, url]",{"range":"178","text":"179"},"Update the dependencies array to be: [admincontext, authcontext, url]",{"range":"180","text":"181"},[1659,1661],"[authcontext, url]",[3411,3413],"[admincontext, authcontext, url]"]